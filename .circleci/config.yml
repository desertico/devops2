# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python:3.7

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
#Python CircleCI 2.0 configuration file
version: 2
jobs:
        build:
              docker:
                     - image: circleci/python:3.7

              working_directory: ~/devops
              
              steps:
                    #1 Obtener el repositorio de GitHub.
                     - checkout
                    #2 Crear un entorno virtual e instalar las dependecias.
                     -run:
                          name: install dependencies
                          command: |
                                  python3 -m venv venv
                                  . venv/bin/activate
                                  pip install -r requirements.txt
                    #3 Ejecutar el software de convenciones de codificación más el tester.
                     -run:
                 
                          name: run tests
                          command: |
                                 . venv/bin/activate
                                 flake8 –-exclude=venv* --statistics
                                # pytest -v –-cov=calculator
                                 pytest –-junitxml=test-results/junit.xml
                     - store_test_results:
                           path: test-results